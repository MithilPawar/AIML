from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier

# Load the Iris dataset
iris = load_iris()
X = iris.data  # Features: sepal_length, sepal_width, petal_length, petal_width
y = iris.target  # Target: species (0: setosa, 1: versicolor, 2: virginica)

# Split the data into training and testing sets (you may also use cross-validation)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Train the KNN model
k = 3  # Example: Using 3 nearest neighbors
knn = KNeighborsClassifier(n_neighbors=k)
knn.fit(X_train_scaled, y_train)

# Predict using the provided values [4.8, 3.0, 1.5, 0.3]
# First, scale the input values using the same scaler
input_data = [[4.8, 3.0, 1.5, 0.3]]
input_data_scaled = scaler.transform(input_data)

# Perform prediction
predicted_class = knn.predict(input_data_scaled)
predicted_species = iris.target_names[predicted_class[0]]

print(f"Predicted flower type: {predicted_species}")
